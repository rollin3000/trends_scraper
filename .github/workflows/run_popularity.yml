name: Update News Popularity (Using Pre-Built Docker Image)

on:
  schedule:
    - cron: '0 */4 * * *'  # 每 4 小時運行一次
  workflow_dispatch:  # 允許手動觸發
  push:
    branches:
      - main  # 只有 main 分支的變更才會觸發

jobs:
  run-popularity:
    runs-on: ubuntu-latest  # GitHub Actions 預設是 x86_64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 1: 檢查 Playwright 是否已安裝 (版本確認)
      - name: Check Playwright Installation
        run: |
          echo "[Debug] Checking Playwright version in Docker..."
          docker run --rm rollin2000tw/google-trends-scraper \
            bash -c "playwright --version"

      # Step 2: (可選) 再次安裝 Playwright Browser (若你的映像確實沒有安裝成功)
      - name: Install Playwright Browsers
        run: |
          echo "[Debug] Force installing browsers in container..."
          docker run --rm rollin2000tw/google-trends-scraper \
            bash -c "playwright install --with-deps chromium"

      # Step 3: 測試 Playwright 是否能正常開啟 Headless Chromium (簡單 Python 測試)
      - name: Test Playwright Headless Chromium (Using Python)
        run: |
          echo "[Debug] Launching a headless Chromium from container..."
          docker run --rm rollin2000tw/google-trends-scraper \
            python -c "from playwright.sync_api import sync_playwright; p = sync_playwright().start(); b = p.chromium.launch(headless=True); print('Chromium launch Success'); b.close()"

      # Step 4: 測試 GitHub Actions 環境對 Google Trends 的直接 wget
      - name: Check Google Trends Access (plain wget)
        run: |
          echo "[Debug] Checking if 'wget https://trends.google.com/trends/api/explore' gets 400 in container..."
          docker run --rm rollin2000tw/google-trends-scraper \
            bash -c "wget -S --spider https://trends.google.com/trends/api/explore || echo '[WARN] Maybe got 400?'"

      # Step 5: 帶自訂 Headers/UA 的 wget 測試 (不改 code，直接在 Workflow 注入)
      - name: Check Google Trends with Custom Headers
        run: |
          echo "[Debug] Trying with custom User-Agent, Accept-Language..."
          docker run --rm rollin2000tw/google-trends-scraper \
            bash -c "wget -S --spider \
              --header='User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36' \
              --header='Accept-Language: zh-TW,zh;q=0.9' \
              https://trends.google.com/trends/api/explore || echo '[WARN] Still got 400?'"

      # Step 6: 最後執行 Google Trends Scraper (你的原始爬蟲程式)
      - name: Pull and Run Google Trends Scraper
        run: |
          echo "[Run] Pull latest docker image..."
          docker pull --platform=linux/amd64 rollin2000tw/google-trends-scraper:latest

          echo "[Run] Execute google_trends_scraper.py in container..."
          docker run --rm \
            -v $(pwd)/app/output:/app/output \
            rollin2000tw/google-trends-scraper:latest \
            python google_trends_scraper.py

      # Step 7: 執行 Popularity Calculation
      - name: Run Popularity Calculation
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "[Run] Execute set_popularity.py with DB URL..."
          docker pull --platform=linux/amd64 rollin2000tw/google-trends-scraper:latest
          docker run --rm \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -v $(pwd)/app/output:/app/output \
            rollin2000tw/google-trends-scraper:latest \
            python set_popularity.py
